image: docker-registry.coffreo.com/exploitation/ci-utils/ci-utils-dind:latest
variables:
  DOCKER_DRIVER: overlay2
  GIT_STRATEGY: fetch

stages:
  - test
  - build
  - quality
  - version
  - deploy

before_script:
  - prepare
  - export TAG=$(eversion -$CI_BUILD_REF_NAME)

build:
  tags:
    - docker
  stage: build
  script:
    - ENV=dev make --file=./.container/Makefile image-build image-push
  except:
    - master

test:
  tags:
    - docker
  stage: test
  script:
    - ENV=dev make --file=./.container/Makefile image-build-sandbox image-test
  except:
    - master

codeAnalysis-sonarqube:
  tags:
    - docker
  stage: quality
  cache:
    {}
  script:
    - sonar-scanner -Dsonar.host.url=http://sonar.k8s.coffreo.camp -Dsonar.login=admin -Dsonar.password=admin
  allow_failure: true
  when: manual

qa:
  tags:
    - docker
  stage: quality
  cache:
    {}
  script:
    - ENV=dev make --file=./.container/Makefile image-build-sandbox image-qa
  allow_failure: true
  when: manual

imageAnalysis-trivy:
  tags:
    - docker
  stage: quality
  artifacts:
    paths:
      - image-scan.txt
    expire_in: 1 week
  script:
    - make --file=./.container/Makefile image-name
    - export IMAGENAME=$(< /tmp/image-name)
    - docker run --rm --env TRIVY_AUTH_URL=https://docker-registry.coffreo.com --env TRIVY_USERNAME=gitlab-ci-token --env TRIVY_PASSWORD=$CI_JOB_TOKEN -v /home/coffreo/cache_trivy/:/root/.cache aquasec/trivy $IMAGENAME > image-scan.txt
  allow_failure: true
  when: manual

BumpVersionDev_patch:
  tags:
    - docker
  stage: version
  script:
    - bump patch
    - make --file=./.container/Makefile TAG=$(eversion) ENV=recette image-build image-push
  when: manual
  only:
    - develop

BumpVersionDev_minor:
  tags:
    - docker
  stage: version
  script:
    - bump minor
    - make --file=./.container/Makefile TAG=$(eversion) ENV=recette image-build image-push
  when: manual
  only:
    - develop

BumpVersionDev_major:
  tags:
    - docker
  stage: version
  script:
    - bump major
    - make --file=./.container/Makefile ENV=recette TAG=$(eversion) image-build image-push
  when: manual
  only:
    - develop

# version stage is intended to bump version on merge into master
BumpVersion:
  tags:
    - docker
  stage: version
  script:
    - bump master
    - make --file=./.container/Makefile TAG=$(eversion) ENV=prod  image-build image-push
    - make --file=./.container/Makefile TAG=$(eversion) TAG_NEW=latest image-tag
    - make --file=./.container/Makefile TAG=latest image-push
  only:
    - master
